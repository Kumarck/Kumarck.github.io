{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/click-me.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/myservice.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/stable/stable.component.css","webpack:///./src/app/stable/stable.component.html","webpack:///./src/app/stable/stable.component.ts","webpack:///./src/app/stable/stable.service.ts","webpack:///./src/app/table/table.component.css","webpack:///./src/app/table/table.component.html","webpack:///./src/app/table/table.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--\\n<div style=\\\"text-align:center\\\">\\n  \\n        <div>\\n            <h2>{{hello}}</h2>\\n            <h3>\\n                    <div style=\\\"margin-top: 10%\\\">\\n                            <label for=\\\"addnew\\\"> Enter Name: </label>\\n                            <input type=\\\"text\\\" #addnew>\\n                            <button (click)=\\\"addnewValue(addnew.value)\\\">Add</button>\\n                        </div>\\n\\n                        <div style=\\\"margin-top: 2%\\\">\\n                            <label for=\\\"hello\\\"> Enter Name: </label>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"hello\\\" name=\\\"hello\\\">\\n                    </div>\\n    \\n            </h3>\\n               \\n        \\n        </div>\\n          \\n\\n         <div style=\\\"margin-top: 10%\\\">\\n                <button (click)=\\\"onclick($event)\\\">Add</button>\\n\\n                <a routerLink = \\\"user\\\">New component</a>\\n            <h3>\\n                    Name:     {{mydata[0].name}} \\n                    Email:     {{mydata[1].email}}\\n                    All Data:{{mydata1}}\\n                    <h2 style=\\\"margin-top: 5%\\\">List data ........</h2>\\n                    <li *ngFor=\\\"let myalldata of datas\\\">\\n                        {{myalldata}}\\n                    </li>\\n                    other list data....\\n                    <h5 style=\\\"margin-right: 5%\\\">\\n                        <li *ngFor=\\\"let condata of mydata\\\">\\n\\n                            {{condata.name}} or {{condata.email}}\\n                        </li>\\n                    </h5>                   \\n            </h3>          \\n         </div>         \\n</div>\\n\\n-->\\n\\n<app-table></app-table>\\n<br>\\n<app-stable></app-stable>\\n\\n<div style=\\\"text-align: center\\\">\\n    {{todaydate}}\\n  <!-- \\n    <h3 style=\\\"margin-top:10%\\\">\\n            <a routerLink = \\\"user\\\" style=\\\"margin-right: 20%\\\">user</a>\\n        <a routerLink = \\\"login\\\" style=\\\"margin-right: 20%\\\">Login</a>\\n        <a routerLink = \\\"signup\\\">sign up</a>\\n    </h3>-->\\n\\n<router-outlet></router-outlet>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { MyserviceService } from './myservice.service';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\n//import {Observable} from 'rxjs/Observable';\n//import {Observable} from 'rxjs/Rx';\nimport 'rxjs/Rx';\n//\n//import { catchError, map, tap } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n\n  todaydate;\n  title = 'app';\n \n  \n\n  constructor(private myservice:MyserviceService)\n  { }\n  \n  ngOnInit() {\n    this.todaydate = this.myservice.showTodayDate();\n   }\n  \n   \n  onclick(event){\n   \n    //alert('hello angular 4');\n    this.datas.push('this is new data');//using push there\n  }\n  addnewValue(addnew){\n\n      this.datas.splice(addnew);//using unshift method is there\n  }\n\n \n\n  //ngOnInit() {this.hello=\"hello ngoninit is using there now..\";}\n  \n  datas = ['Windstorm', 'Bombasto', 'Magneta', 'Tornado'];\n  \n  \n  mydata1 = this.datas[0];\n\n    alldata =[\n\n      new adata('aaa','aa@aa'),\n      new adata('bbb','bb@bb'),\n      new adata('ccc','cc@cc'),\n      new adata('ddd','dd@dd'),\n      new adata('eee','ee@ee')\n    ];\n\n    mydata=this.alldata;\n  \n\n}\n\nexport class adata {\n  constructor(\n    public name: string,\n    public email: string) { }\n }\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ClickMeComponent } from './click-me.component';\nimport { AppComponent } from './app.component'\nimport { FormsModule } from '@angular/forms';\nimport { MyserviceService } from './myservice.service';\nimport { RouterModule,Routes } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HttpModule } from '@angular/http';\nimport { TableComponent } from './table/table.component';\nimport { StableComponent } from './stable/stable.component';\nimport {StableDataService}from './stable/stable.service';\n\n\n// const appRoutes: Routes = [\n \n//   { path: 'user', component: UserComponent }\n// ];\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,ClickMeComponent,UserComponent, LoginComponent, SignupComponent, TableComponent, StableComponent\n  ],\n  imports: [ RouterModule.forRoot([\n\n    {path:'user',component:UserComponent},\n    {path:'login',component:LoginComponent},\n    {path:'signup',component:SignupComponent},\n    {path:'Table',component:TableComponent},\n\n  ]),\n    BrowserModule,FormsModule,HttpModule\n  ],\n  providers: [MyserviceService,StableDataService],\n  bootstrap: [AppComponent,UserComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-click-me',\r\n  template: `\r\n    <button (click)=\"onClickMe()\">Click me!</button>\r\n    {{clickMessage}} <h3>{{message2}}</h3>`\r\n})\r\nexport class ClickMeComponent {\r\n  clickMessage = ' hello angular 4';\r\n  message1='this is message 1';\r\n  message2='this is message 2';\r\n\r\n  onClickMe() {\r\n   // this.clickMessage = 'It is angular js 4!';\r\n    this.message2='hello this is message2';\r\n\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n<div class=\\\"container\\\">\\n  <h1 style=\\\"margin-top: 9%\\\">Login Page </h1>\\n <!-- <div>\\n          <h3 style=\\\"margin-top: 2%\\\">\\n              User Id<input type=\\\"text\\\" name=\\\"username\\\">\\n              Password<input type=\\\"password\\\" name=\\\"password\\\">\\n              <button style=\\\"margin-left: 1%\\\">submit</button>\\n          </h3>\\n </div>-->\\n <form #loginData=\\\"ngForm\\\" (ngSubmit)=\\\"onclickLogin(loginData.value)\\\">\\n\\n        <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">User Id</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"id\\\" placeholder=\\\"User Id\\\"  ngModel>\\n        </div>\\n\\n     <div class=\\\"form-group\\\">\\n       <label for=\\\"password\\\">Password</label>\\n       <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\n     </div>\\n\\n     <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Log in</button>\\n\\n   </form>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {  }\n\n  onclickLogin(data)\n  {\n    alert(\"this is login \" +data.id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n\n  constructor() { }\n\n  showTodayDate() {\n    let ndate = new Date();\n    return ndate;\n }\n \n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n<!--\\n    <h1 style=\\\"margin-top: 9%\\\">Sign Up Page </h1>\\n    <div style=\\\"margin-top: 2%\\\">\\n        <h3>\\n            User Id:<input type=\\\"text\\\" name=\\\"username\\\">\\n            Name:<input type=\\\"text\\\" name=\\\"name\\\">\\n            Email:<input type=\\\"email\\\" name=\\\"email\\\">\\n            <button style=\\\"margin-left: 1%\\\">submit</button>\\n        </h3>\\n</div>-->\\n<div class=\\\"container\\\" style=\\\"margin-top: 2%\\\">\\n        <h1>Sign Up Page</h1>\\n        <form #userData=\\\"ngForm\\\" (ngSubmit)=\\\"onclickSubmit(userData.value)\\\">\\n\\n             <div class=\\\"form-group\\\">\\n             <label for=\\\"name\\\">User Id</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"userId\\\" placeholder=\\\"User Id\\\"  ngModel>\\n            </div>\\n\\n             <div class=\\\"form-group\\\">\\n             <label for=\\\"name\\\">Id</label>\\n             <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"id\\\" placeholder=\\\"User Id\\\"  ngModel>\\n             </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Name\\\" ngModel>\\n          </div>\\n     \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"alterEgo\\\">Email Id</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"body\\\" placeholder=\\\"Email Id\\\"   ngModel> \\n          </div>\\n     \\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Submit</button>\\n     \\n        </form>\\n        <ul style=\\\"text-align: left\\\">\\n            <li>\\n                    user Id:{{dataId}}\\n            </li>\\n            <li>\\n                    Name: {{Username}}\\n            </li>\\n             <li>\\n                    Email.id:{{Useremail}}\\n            </li>\\n        </ul>\\n        {{datajson}}\\n\\n\\n        \\n<button  class=\\\"btn btn-success\\\" (click)=\\\"onclickShow()\\\" >Show Data</button>\\n<table border=\\\"2\\\">\\n    <tr><th>userId</th><th>id</th><th>title</th><th>body</th></tr>\\n    <tr *ngFor=\\\"let postdata of httpdatashow\\\"><td>{{postdata.userId}}</td><td>{{postdata.id}}</td><td>{{postdata.title}}</td><td>{{postdata.body}}</td></tr>\\n</table>        \\n    </div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\n//import {Observable} from 'rxjs/Observable';\n//import {Observable} from 'rxjs/Rx';\nimport 'rxjs/Rx';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  \n  dataId='';\n  datajson='';\n  Username='';\n  Useremail='';\n  httpdatashow='';\n\n\n  constructor(private http:Http) { }\n\n  ngOnInit()\n   { }\n\n\n /* onclickSubmit(data:Data)\n  {\n    alert(\"click here \" +data.title);\n    this.dataId=data.id;\n    this.Username=data.title;\n    this.Useremail=data.body;\n   // console.log(data.id);\n   // console.log(data.Name);\n   //console.log(data.emailid);\n   this.datajson= JSON.stringify(data);\n\n\n   this.http.post(\"https://jsonplaceholder.typicode.com/posts\",JSON.stringify(data))\n   .subscribe(status=> console.log(JSON.stringify(status)));\n\n  }*/\n\n  onclickShow()\n  {\n    alert(\"show data\");\n\n    this.http.get(\"https://jsonplaceholder.typicode.com/posts\")\n    .map((response: any) => response.json())\n    .subscribe(data => {this.displaydata(data);})\n  }\n\n  displaydata(data){this.httpdatashow=data;}\n\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n                                       \\n  <div class=\\\"dropdown\\\">\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"border border-dark\\\">\\n  <div class=\\\"table table-responsive\\\">\\n  <table  class=\\\"table table-hover \\\">\\n    \\n<thead>\\n      <tr>\\n        <th>Year\\n       </th>\\n        <th>Team</th>\\n        <th> Player Name\\n         </th>\\n         <th>240\\n          </th>\\n         <th>Pos\\n          </th>\\n        <th>Hit\\n         </th>\\n         <th>Delete\\n        </th>\\n    </thead>\\n   <tbody>\\n      \\n      <tr *ngFor = \\\"let data of httpdata\\\">\\n          <td> {{data.session}}</td>\\n         <td> {{data.team}}</td>\\n          <td> {{data.position_1}}</td>\\n          <td> {{data.score}}</td>\\n          <td> {{data.first_name}}</td>\\n        \\n         <td> {{data.height}}</td>\\n         <td> <button (click)=\\\"deletePersion(data.id,data.position_1)\\\">Delete</button>\\n        </td>\\n      </tr> \\n    </tbody>\\n  </table>\\n</div>\\n</div>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"border border-dark\\\">\\n  <div class=\\\"table table-responsive\\\" >\\n  <table  class=\\\"table table-hover \\\" >\\n    \\n<thead>\\n      <tr>\\n        <th>year\\n<select [(ngModel)]=\\\"selectedDevice\\\" (change)=\\\"onChange($event)\\\">\\n    <option *ngFor=\\\"let data of httpdata\\\">{{data.session}}</option>\\n</select>\\n       </th>\\n       <th>team\\n          <select [(ngModel)]=\\\"selectDevic\\\" (change)=\\\"onChange($event)\\\">\\n             <option *ngFor = \\\"let data of httpdata\\\">{{data.team}}</option>\\n         </select>\\n       </th>\\n       <th>Plyear name\\n          <select [(ngModel)]=\\\"selectDevi\\\" (change)=\\\"onChange($event)\\\">\\n             <option *ngFor = \\\"let data of httpdata\\\">{{data.position_1}}</option>\\n         </select>\\n       </th>\\n       <th>240\\n          <select [(ngModel)]=\\\"selectDev\\\" (change)=\\\"onChange($event)\\\">\\n             <option *ngFor = \\\"let data of httpdata\\\">{{data.score}}</option>\\n         </select>\\n       </th>\\n       <th>pos\\n          <select [(ngModel)]=\\\"selectDe\\\" (change)=\\\"onChange($event)\\\">\\n             <option *ngFor = \\\"let data of httpdata\\\">{{data.first_name}}</option>\\n         </select>\\n       </th>\\n       <th>hit\\n          <select [(ngModel)]=\\\"selectD\\\" (change)=\\\"onChange($event)\\\">\\n             <option *ngFor = \\\"let data of httpdata\\\">{{data.height}}</option>\\n         </select>\\n       </th>\\n       \\n     </thead>\\n   <tbody>\\n      \\n      <tr>\\n          <td> {{selectedDevice}}</td>\\n         <td> {{selectDevic}}</td>\\n          <td> {{selectDevi}}</td>\\n          <td> {{selectDev}}</td>\\n          <td> {{selectDe}}</td>\\n        \\n         <td> {{selectD}}</td>\\n         <td>\\n           \\n           <button (click)=\\\"addPersion(selectedDevice,selectDevic,selectDevi,selectDev,selectDe,selectD)\\\">Add</button>\\n         </td>\\n      </tr> \\n    </tbody>\\n  </table>\\n\\n<!--\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"bsorder border-dark\\\">\\n  <div class=\\\"table table-responsive\\\" >-->\\n  <!--<table  class=\\\"table table-hover\\\">\\n    \\n<thead>\\n      <tr>\\n        <th>Year</th>\\n        <th>team</th>\\n        <th> Player Name</th>\\n         <th>240</th>\\n         <th>Pos</th>\\n        <th>hit</th>\\n    </thead>-->\\n   <!-- <tbody>-->\\n      <!--//testing coding here\\n      <tr *ngFor = \\\"let data of httpdata\\\">\\n          <td> {{data.session}}</td>\\n         <td> {{data.team}}</td>\\n          <td> {{data.position_1}}</td>\\n          <td> {{data.score}}</td>\\n          <td> {{data.first_name}}</td>\\n        \\n         <td> {{data.height}}</td>\\n      </tr>--> \\n    <!--</tbody>\\n  </table>--><!--\\n</div>\\n</div>\\n</div>-->\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport {StableDataService} from '../stable/stable.service';\n//import {Observable} from 'rxjs/Observable';\n//import {Observable} from 'rxjs/Rx';\nimport 'rxjs/Rx';\n\n@Component({\n  selector: 'app-stable',\n  templateUrl: './stable.component.html',\n  styleUrls: ['./stable.component.css']\n})\nexport class StableComponent implements OnInit {\n\nconstructor(private http:Http,private stableData:StableDataService) { }\n\n  httpdata;\n  //sdataid=2;\n\n  ngOnInit() {\n\n   // this.http.get(\"http://jsonplaceholder.typicode.com/users\")\n   this.http.get(\"http://ddpradhan.com/football/\")\n    .map((response: any) => response.json())\n    .subscribe(data => \n      {\n        console.log(data,'getting from server data');\n        this.displaydata(data);})\n\n  }\n  displaydata(data){this.httpdata=data;}\n onChange($event) {\n    \n    // I want to do something here for new selectedDevice, but what I\n    // got here is always last selection, not the one I just select.\n}\n    \naddPersion(data1,data2,data3,data4,data5,data6)\n{ //debugger;\n  if(data1 !=null && data2 != null)\n  {\n    alert('Add new persion here');\n    var postData={\"year\":data1,\"team\":data2,\"Player\":data3,\"gread\":data4,\"Pos\":data5,\"hit\":data6};\n    console.log(JSON.stringify(postData));\n    this.stableData. postDataToUrl(JSON.stringify(postData));\n\n  }\n  else\n  {\n    alert('Select All Data');\n  }\n \n}\ndeletePersion(id,name)\n{\n  alert('Id=' +id + 'Player_Name=' +name);\n\n}\n}\n","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport 'rxjs/Rx';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n@Injectable()\r\nexport class StableDataService {\r\n\r\n  dataChanged = new Subject();\r\n\r\n  constructor(private http: Http) {}\r\n\r\n\r\n  \r\n  postDataToUrl(data) {\r\n      debugger;\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.http.post('http://localhost:3001/index' + data,\r\n      {headers: headers});\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"table {\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\r\\n    width: 100%;\\r\\n    border: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nth, td {\\r\\n    text-align: left;\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\ntr:nth-child(even){background-color: #f2f2f2}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\\r\\n/* Float four columns side by side */\\r\\n\\r\\n.column {\\r\\n  float: left;\\r\\n  width: 33%;\\r\\n  padding: 0 5px;\\r\\n}\\r\\n\\r\\n/* Remove extra left and right margins, due to padding */\\r\\n\\r\\n.row {margin: 0 8px;\\r\\nmargin-top: 20px;}\\r\\n\\r\\n/* Clear floats after the columns */\\r\\n\\r\\n.row:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n/* Responsive columns */\\r\\n\\r\\n@media screen and (max-width: 600px) {\\r\\n  .column {\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n    margin-bottom: 6px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"\\n\\n<div style=\\\"overflow-x:auto;\\\">\\n\\n\\t<div class=\\\"row\\\">\\n  <div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n  <table>\\n    <tr>\\n      <th>Qtr1</th>\\n      <th>0-4</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td> {{data.last_name}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr1</th>\\n      <th>4-8</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td> {{data.position_1}}</td>\\n    </tr>\\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr1</th>\\n      <th>8-12</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td> {{data.position_2}}</td>\\n    </tr>\\n    \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr2</th>\\n      <th>12-16</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td> {{data.position_3}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr2</th>\\n      <th>16-20</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.status}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr2</th>\\n      <th>20-24</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.name}}</td>\\n    </tr>\\n   </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr3</th>\\n      <th>24-28</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.status}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr3</th>\\n      <th>28-32</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.position_3}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr3</th>\\n      <th>32-36</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.name}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr4</th>\\n      <th>36-40</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.name}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr4</th>\\n      <th>40-44</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.position_2}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n\\n<div class=\\\"column\\\">\\n    <div class=\\\"card\\\">\\n    \\t<table>\\n    <tr>\\n      <th>Qtr4</th>\\n      <th>44-48</th>\\n    </tr>\\n   <tr *ngFor = \\\"let data of httpdata\\\">\\n      <td>{{data.first_name}}</td>\\n      <td>{{data.position_1}}</td>\\n    </tr>\\n   \\n  </table>\\n</div>\\n</div>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\n//import {Observable} from 'rxjs/Observable';\n//import {Observable} from 'rxjs/Rx';\nimport 'rxjs/Rx';\n\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  constructor(private http:Http) { }\n\n  httpdata;\n  //sdataid=2;\n\n  ngOnInit() {\n\n   // this.http.get(\"http://jsonplaceholder.typicode.com/users\")\n   this.http.get(\"http://ddpradhan.com/football/\")\n    .map((response: any) => response.json())\n    .subscribe(data => \n      {\n        console.log(data,'getting from server data');\n        this.displaydata(data);})\n\n  }\n  displaydata(data){this.httpdata=data;}\n    \n}\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n\\n\\n    <h1 style=\\\"margin-top: 10%\\\">This is the user Page</h1>\\n\\n\\n    <div>    \\n        <table border=\\\"2\\\" style=\\\"margin-left: 20%\\\" width=\\\"60%\\\" height=\\\"20%\\\">\\n           \\n                <tr><th style=\\\"text-align:center\\\">User Id</th><th style=\\\"text-align:center\\\">Name</th><th style=\\\"text-align: center\\\">Email</th><th style=\\\"text-align: center\\\">Session</th></tr>\\n              <tr *ngFor = \\\"let data of httpdata\\\"><td>{{data.id}}</td><td>{{data.first_name}}</td><td>{{data.email}}</td><td>{{data.session}}</td></tr>  \\n        </table>    \\n        <!--    <ul *ngFor = \\\"let data of httpdata\\\">\\n    <li>Id:{{data.id}} Name:{{data.name}} Email:{{data.email}}</li>\\n             </ul>-->\\n    </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\n//import {Observable} from 'rxjs/Observable';\n//import {Observable} from 'rxjs/Rx';\nimport 'rxjs/Rx';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private http:Http) { }\n\n  httpdata;\n  //sdataid=2;\n\n  ngOnInit() {\n\n   // this.http.get(\"http://jsonplaceholder.typicode.com/users\")\n   this.http.get(\"http://ddpradhan.com/football/\")\n    .map((response: any) => response.json())\n    .subscribe(data => \n      {\n        console.log(data,'getting from server data');\n        this.displaydata(data);})\n\n  }\n  displaydata(data){this.httpdata=data;}\n    \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}